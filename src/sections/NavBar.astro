---
const menuItems = [
	{ name: "Contacto", href: "#Contacto" },
	{ name: "Visual", href: "#visual" },
	{ name: "Beneficios", href: "#beneficios" },
	{ name: "Proyectos", href: "#proyectos" },
	{ name: "Utilizar", href: "#utilizar" },
	{ name: "Dimensiones", href: "#dimensiones" },
	{ name: "Cotizar", href: "#cotizar" },
];

import Logo from "@svgs/logo-lightboard.svg";
---

<header>
	<a class="logo" href="/" title="Ir a la página principal - LightBoard Chile">
		<Logo class="logo-svg" aria-label="Logo LightBoard Chile" />
	</a>
	<nav
		onclick="document.getElementById('menu-toggle').checked = !document.getElementById('menu-toggle').checked"
	>
		<label for="menu-toggle" class="menu-toggle" title="Abrir/Cerrar menú" aria-label="Abrir/Cerrar menú">
			<input type="checkbox" id="menu-toggle" />
			<button type="button" title="Abrir/Cerrar menú" aria-label="Abrir/Cerrar menú">
				<div></div>
				<div></div>
				<div></div>
			</button>
		</label>
		<div class="links">
			{menuItems.map(({ name, href }) => <a href={href} title={`Ir a ${name}`} aria-label={`Ir a ${name}`}>{name}</a>)}
		</div>
	</nav>
</header>

<style>
	header {
		width: 100%;
		display: flex;
		justify-content: space-between;
		align-items: center;
		position: relative;
		padding: 0 20px;
	}

	.logo {
		width: 100px;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-right: 20px;
	}

	.logo-svg {
		width: 100%; /* El SVG ocupará todo el ancho del contenedor */
		height: 100%; /* El SVG ocupará todo el alto del contenedor */
	}

	nav {
		padding: 18px 22px;
		border-radius: 15px;
		border: 1px solid rgba(153, 153, 153, 0.15);
		background: linear-gradient(
			232deg,
			rgba(255, 255, 255, 0.2) -8.36%,
			rgba(139, 139, 139, 0.16) 111.4%
		);
		background-blend-mode: plus-lighter;
		box-shadow: -5px 5px 12px 0px rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(20px);
	}

	nav .links {
		display: flex;
		gap: 15px;
	}

	nav a {
		color: var(--blanco-text);
		text-decoration: none;
		font-size: clamp(2.5rem, 0rem + 2.5vw, 3rem); /* entre 1000 y 1200 px */
		transition: all 0.25s ease-in-out;
	}

	nav a:hover {
		text-shadow:
			0 0 10px rgba(255, 255, 255, 0.5),
			0 0 20px rgba(255, 255, 255, 0.5);
	}

	nav label {
		display: none;
	}

	nav label input {
		display: none;
	}

	@media (width < 950px) {
		nav label {
			display: block;
		}

		/* Hamburger toggle */
		nav label button {
			display: flex;
			flex-direction: column;
			width: 25.3px;
			height: 20px;
			border: 0;
			background: transparent;
			gap: 7px;
			transition: all 0.5s ease-in-out;
			z-index: 11;
		}

		nav label button div {
			background: white;
			height: 2px;
			width: 100%;
			border-radius: 5px;
			transition: all 0.5s ease-in-out;
			transform-origin: left;
		}

		nav label input:checked ~ button {
			transform: translateX(5px);
		}

		nav label input:checked ~ button div:first-child {
			transform: rotate(45deg);
		}

		nav label input:checked ~ button div:nth-child(2) {
			opacity: 0;
		}

		nav label input:checked ~ button div:last-child {
			transform: rotate(-45deg);
		}

		/* Menu items */
		nav {
			z-index: 10;
			border: 1px solid rgba(153, 153, 153, 0.35);
			position: absolute;
			top: 15px;
			right: 20px;
			display: flex;
			flex-direction: column;
			align-items: end;
			transition: all 0.5s ease-in-out;
			overflow: hidden;
		}

		nav:not(:has(input:checked)) {
			width: 71px;
			height: 58px;
		}

		nav:has(input:checked) {
			background: linear-gradient(
				232deg,
				rgba(188, 188, 188, 0.2) -8.36%,
				rgba(88, 88, 88, 0.16) 111.4%
			);
			backdrop-filter: blur(20px);
			width: 190.11px;
			height: 369.2px;
		}
		
		nav .links {
			margin-top: 20px;
			flex-direction: column;
			align-items: center;
			transition: all 0.5s ease-in-out;	
		}
		
				nav:not(:has(input:checked)) .links {
					opacity: 0;
				}
		
				nav:has(input:checked) .links {
					opacity: 1;
				}
	}
</style>

<script>
	document.addEventListener("click", (event) => {
		const nav = document.querySelector("nav") as HTMLElement;
		const menuToggle = document.getElementById(
			"menu-toggle"
		) as HTMLInputElement;

		// Si el menú está abierto (checkbox está checked)
		if (menuToggle.checked) {
			// Verifica si el clic fue fuera del nav
			if (!nav.contains(event.target as Node)) {
				menuToggle.checked = false;
			}
		}
	});
</script>
