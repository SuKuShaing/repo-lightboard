---
import LineasDeLuz from "@/components/LineasDeLuz.astro";
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />

		<!-- SEO Meta Tags -->
		<title>Lightboard en chile | Mejora tus clases online</title>
		<meta
			name="description"
			content="Lightboard en Chile. Mejora tus clases online con la pizarra de luz. Ideal para universidades, colegios, liceos, profesores y estudiantes."
		/>
		<meta
			name="keywords"
			content="Lightboard, pizarra de luz, pizarra transparente, clases en línea, clases online, profesores, estudiantes, Chile"
		/>
		<meta name="author" content="Sebastián Sanhueza" />
		<meta name="robots" content="index, follow" />
		<meta name="theme-color" content="#0B0824" />
		<link rel="canonical" href="https://lightboard.cl/" />

		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/x-icon" href="/favicon-32x32.png" />
		<link rel="icon" type="image/x-icon" href="/favicon-16x16.png" />
		<link rel="icon" type="image/png" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />

		<!-- RRSS -->

		<!-- Site Map -->
		<link rel="sitemap" href="/sitemap-index.xml" />
	</head>
	<body>
		<main>
			<slot />
		</main>
		<LineasDeLuz />
	</body>
</html>

<style is:global>
	/* ********************************************************** */
	/* **************** Reset estilos por defectos ************** */
	/* ********************************************************** */

	* {
		/* Include padding and border in si ze calculation. */
		box-sizing: border-box;
		/* Position based on immediate parent and al low adjusting top/right/bottom/left */
		position: relative;
		/* Prevent grid and flex items from spilling out of their container. */
		min-width: 0;

		margin: 0;
		padding: 0;
		list-style: none;
		text-decoration: none;
		border: none;
		outline: none;
		font-family: inherit; /* Heredar la fuente */
		font-size: inherit; /* Heredar el tamaño */
		line-height: inherit; /* Heredar el interlineado */
		color: inherit; /* Heredar el color */
	}

	/* resetear el tamaño del texto para poder trabajar con Rem y que el valor rem sea igual al resultado en px*/
	html {
		font-size: 62.5%;
	}

	body {
		/* Ensure that the body fil Is the entire viewport. */
		min-height: 100dvh;
	}

	h1,
	h2,
	h3,
	h4 {
		/* Balance headings across multiple lines into an ven block. */
		text-wrap: balance;
	}
	p {
		/* Prevent text orphans (single words on last line. */
		text-wrap: pretty;
		margin-block: 1lh; /* Espacio entre párrafos igual a la altura de la línea */
	}

	/* ********************************************************** */
	/* ******************* Estilos por Globales ***************** */
	/* ********************************************************** */

	:root {
		--blanco-text: rgba(255, 255, 255, 0.9);
	}

	body {
		background:
			linear-gradient(180deg, #0b0824, transparent 90%) no-repeat,
			/* radiente lineal principal */ 
			linear-gradient(90deg, #04030e, #0b0824); /* radiente lineal principal */
		background-size:
			100% 10vh,
			100% 100%; /* El radial ocupa el 10% de la pantalla */
		/* background-size: ancho-primera-capa alto-primera-capa, ancho-segunda-capa alto-segunda-capa, etc; */
		background-position: top, top; /* especifica la posición inicial de cada capa de fondo en el contenedor */

		/* Tipografía */
		color: #fff;
		font-family: Roboto, sans-serif;
	}

	main {
		display: flex;
		flex-direction: column;
		gap: 100px;
		max-width: 1200px;
		margin: 0 auto;
		padding: 20px;
	}

	@media (width < 1000px) {
		main {
			gap: 20px;
		}
	}
</style>

<script>
	//////////////////////////////////// 
	/// Apertura y cierre de modales ///
	//////////////////////////////////// 
	document.addEventListener("DOMContentLoaded", () => {
		let scrollY = 0;

		document.querySelectorAll(".open-modal").forEach((openBtn) => {
			const modalId = openBtn.getAttribute("data-idNombreModal") as string;
			const dialog = document.getElementById(modalId) as HTMLDialogElement;
			if (!dialog) return;

			// Abrir modal al hacer click en la imagen
			openBtn.addEventListener("click", () => {
				scrollY = window.scrollY;
				document.body.style.position = "fixed";
				document.body.style.top = `-${scrollY}px`;
				document.body.style.width = "100%";
				document.body.style.background = "#04030e";
				document.documentElement.style.overflow = "hidden";
				dialog.showModal();
			});

			// Cerrar modal al hacer click en el botón de cerrar
			const closeBtn = dialog.querySelector(".cerrar-modal");
			closeBtn?.addEventListener("click", (e) => {
				e.stopPropagation();
				dialog.close();
			});

			// Cerrar modal al hacer click fuera del contenido
			dialog.addEventListener("click", (e) => {
				const rect = dialog.getBoundingClientRect();
				if (
					e.clientX < rect.left ||
					e.clientX > rect.right ||
					e.clientY < rect.top ||
					e.clientY > rect.bottom
				) {
					dialog.close();
				}
			});

			// Restaurar scroll al cerrar el modal
			dialog.addEventListener("close", () => {
				document.body.style.position = "";
				document.body.style.top = "";
				document.body.style.width = "";
				document.body.style.background = "";
				document.documentElement.style.overflow = "";
				window.scrollTo(0, scrollY);
			});
		});
	});
</script>
