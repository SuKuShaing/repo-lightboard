---
import type { ImageMetadata } from "astro";
import LightBoardImg from "./LightBoardImg.astro";
import CerrarSvg from "@svgs/Close.svg";

interface Props {
	src: ImageMetadata;
	alt: string;
	ancho: number;
	modalId?: string;
}

const { src, alt, ancho, modalId } = Astro.props;
const id = modalId ?? `dialog-${Math.random().toString(36).slice(2, 10)}`;
---

<div
	id={`btn-open-modal-${id}`}
	class="open-modal"
	data-idNombreModal={id}
	style={`max-width: ${ancho}px`}
>
	<LightBoardImg src={src} alt={alt} ancho={ancho} />
</div>

<dialog id={id}>
	<button id={`btn-close-modal-${id}`} class="cerrar-modal">
		<CerrarSvg class="svgCerrar" />
	</button>
	<LightBoardImg src={src} alt={alt} ancho={800} />
</dialog>

<style>
	.open-modal {
		cursor: pointer;
	}

	dialog {
		margin: auto;
		background-color: transparent;
		position: fixed; /* Para que el botón se posicione al medio según el navegador */
		overflow: visible;
		opacity: 0;
		transition: all 0.3s allow-discrete;

		.cerrar-modal {
			position: absolute;
			top: -70px; /* 30px por encima del dialog */
			right: 0px; /* alineado a la derecha */
			background: linear-gradient(
				232deg,
				rgba(255, 255, 255, 0.2) -8.36%,
				rgba(139, 139, 139, 0.16) 111.4%
			);
			border: 1px solid rgba(153, 153, 153, 0.6);
			cursor: pointer;
			border-radius: 50%;
			/* padding: 5px; */
			width: 40px;
			height: 40px;
			z-index: 10;

			display: grid;
			place-items: center;

			.svgCerrar {
				color: rgba(255, 255, 255, 0.8);
				width: 30px;
				height: 30px;
			}
		}
	}

	dialog[open] {
		opacity: 1;
	}

	dialog::backdrop {
		background: rgba(0, 0, 0, 0.2);
		backdrop-filter: blur(10px);
		transition: all 0.2s allow-discrete;
	}

	@starting-style {
		dialog[open] {
			opacity: 0;
		}

		dialog[open]::backdrop {
			background: rgba(0, 0, 0, 0);
			backdrop-filter: blur(0px);
		}
	}
</style>

<!-- <script>
	// // Variables
	// const dialog = document.getElementById(`${modalId}`) as HTMLDialogElement;
	// const openModalButton = document.querySelector(
	// 	".open-modal"
	// ) as HTMLDivElement;

	// // listerner para el evento de click
	// openModalButton?.addEventListener("click", openModal);

	// // abrir modal
	// function openModal() {
	// 	dialog.showModal();
	// }

	// // cerrar modal
	// function closeModal() {
	// 	dialog.close();
	// }

	// // Cerrar modal al hacer click fuera de él
	// dialog.addEventListener("click", (e) => {
	// 	const dialogDimensions = dialog.getBoundingClientRect();
	// 	if (
	// 		e.clientX < dialogDimensions.left ||
	// 		e.clientX > dialogDimensions.right ||
	// 		e.clientY < dialogDimensions.top ||
	// 		e.clientY > dialogDimensions.bottom
	// 	) {
	// 		closeModal();
	// 	}
	// });
</script> -->
